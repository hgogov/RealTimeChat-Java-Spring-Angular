spring:
  application:
    name: Chat Backend
  datasource:
    url: jdbc:postgresql://localhost:5432/chatdb
    username: chat_user
    password: chat_password
  flyway:
    enabled: true
    locations: classpath:db/migration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
  websocket:
    enabled: true
  kafka:
    bootstrap-servers: localhost:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: chat-backend-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
        spring.json.value.default.type: "com.chatapp.backend.model.ChatMessage"
        session.timeout.ms: 60000
        heartbeat.interval.ms: 15000
    listener:
      ack-mode: manual
  logging:
    level:
      org.springframework: DEBUG
      com.fasterxml.jackson: DEBUG
      org.hibernate: DEBUG
      org.apache.kafka: DEBUG
      org.springframework.kafka: DEBUG
      com.chatapp.backend: DEBUG
      org.springframework.boot: INFO
  jackson:
    time-zone: UTC

app:
  kafka:
    topics:
      chat-messages: chat-messages
      chat-messages-dlt: chat-messages-dlt
  jwt:
    secret: ${JWT_SECRET:BjfdkB2OVEAfWA41INn0vDxf+Uknf6Cf3ED1NZTUf8g=}
    expiration:
      ms: 86400000 # 24 hours
  cors:
    allowed-origins: "http://localhost:4200"