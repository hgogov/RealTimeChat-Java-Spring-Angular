# Application Name
spring:
  application:
    name: Chat Backend

  # Database Configuration
  datasource:
    driver-class-name: org.postgresql.Driver
    username: chat_user
    password: chat_password
    url: jdbc:postgresql://localhost:5432/chatdb

  # Flyway Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration

  # Hibernate Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true

  # WebSocket Configuration
  websocket:
    enabled: true

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:29092 # Kafka server (from docker-compose)
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.chatapp.backend.model" # Trust deserialization of Message class

  # Logging Configuration
  logging:
    level:
      org.springframework: DEBUG
      com.fasterxml.jackson: DEBUG
      org.hibernate: DEBUG
      org.apache.kafka: DEBUG

  # Jackson Configuration (for JSON serialization/deserialization)
  jackson:
    time-zone: UTC # Ensure consistent timestamps

# Kafka Topics
kafka:
  topics:
    chat-messages: chat-messages

# JWT Configuration
jwt:
  secret: BjfdkB2OVEAfWA41INn0vDxf+Uknf6Cf3ED1NZTUf8g=
  expiration:
    ms: 86400000 # 24 hours